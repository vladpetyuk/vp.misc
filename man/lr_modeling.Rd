% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lr_modeling.R
\name{lr_modeling}
\alias{lr_modeling}
\title{Logistic Regression Predictive Models}
\usage{
lr_modeling(
  msnset,
  features,
  response,
  pred.cls,
  K = NULL,
  sel.feat = T,
  par.backend = c("mc", "foreach", "none")
)
}
\arguments{
\item{msnset}{MSnSet object. Note - can it be generalized to eset?}

\item{features}{character vector features to select from for
building prediction model. The features can be either in
featureNames(msnset) or in pData(msnset).}

\item{response}{factor to classify along. Must be only 2 levels.}

\item{pred.cls}{character, class to predict}

\item{K}{specifies the cross-validation type. Default NULL means LOOCV.
Another typical value is 10.}

\item{sel.feat}{logical to select features using LASSO
or use the entire set?}

\item{par.backend}{type of backend to support parallelizattion.
'mc' uses mclapply from parallel,
'foreach' is based on 'foreach',
'none' - just a single thread.}
}
\value{
list
     \describe{
         \item{\code{prob}}{is the probabilities (response) from LOOCV
         that the sample is "case".  That is how well model trained
         on other samples, predicts this particular one.}
         \item{\code{features}}{list of selected features
         for each iteration of LOOCV}
         \item{\code{top}}{top features over all iterations}
         \item{\code{auc}}{AUC}
         \item{\code{pred}}{prediction perfomance obtained by
                 \code{ROCR::prediction}}
     }
}
\description{
The objective is - given the number of features,
select the most informative ones and evaluate
the predictive logistic regression model.
The feature and model selection performed independently
for each round of LOOCV. Feature selection performed using
LASSO approach.
}
\examples{
data(srm_msnset)
head(varLabels(msnset))
head(msnset$subject.type)
# reduce to two classes
msnset <- msnset[,msnset$subject.type != "control.1"]
msnset$subject.type <- as.factor(msnset$subject.type)
# Note, par.backend="none" is for the example only.
out <- lr_modeling(msnset,
                   features=featureNames(msnset),
                   response="subject.type",
                   pred.cls="case", par.backend="none")
plotAUC(out)
# top features consistently recurring in the models during LOOCV
print(out$top)
# the AUC
print(out$auc)
# probabilities of classifying the sample right, if the feature selection
# and model training was performed on other samples
plot(sort(out$prob))
abline(h=0.5, col='red')



}
