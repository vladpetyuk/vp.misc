% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/peptide_significance_map.R
\name{peptide_significance_map}
\alias{peptide_significance_map}
\title{Peptide significance map}
\usage{
peptide_significance_map(
  x,
  accession,
  p_val_from,
  type = c("discrete", "continuous", "y"),
  name_from = c("accession"),
  ...
)
}
\arguments{
\item{x}{\code{MSnSet} object.}

\item{accession}{\code{character}. Name of the protein
(or accession in general terms) to plot peptides for.}

\item{p_val_from}{character. Name of the column in `fData` with p-values.}

\item{type}{character. Different ways of representing p-values.
Types are: "continuous" - continuous color scheme,
"discrete" - discrete color scheme,
"y" - p-values shown on y-axis akin Manhattan plot.}

\item{name_from}{character. Column in `fData` that `accession` is taken from.
Typically it is "accession".}

\item{...}{to be documented}
}
\value{
\code{ggplot} object
}
\description{
Mapping peptides onto the protein sequence with showing statisical significance.
}
\examples{

data("peptide_count_data")

library(msmsTests)


alt.f <- "y ~ group + 1"
null.f <- "y ~ 1"
div <- colSums(exprs(peptide_count_data)) # normalization factor
res <- msms.glm.qlll(peptide_count_data, alt.f, null.f, div=div)
res$p.val.adj <- p.adjust(res$p.value, "BH")

# adding significance metrics
f_data <- fData(peptide_count_data)
f_data$P.Value <- res[featureNames(peptide_count_data),"p.value"]
f_data$adj.P.Val <- res[featureNames(peptide_count_data),"p.val.adj"]
fData(peptide_count_data) <- f_data

# Path to FASTA file
fasta <- system.file("extdata/FASTAs",
                     "H_sapiens_UniProt_SPROT_2021-06-20.fasta.gz",
                     package = "MSnSet.utils")

peptide_count_data <- map_peptide_position(peptide_count_data,
                                           fasta,
                                           accession_col = "protein",
                                           peptide_col = "Sequence")

peptide_significance_map(fData(peptide_count_data),
                         "sp|O15240|VGF_HUMAN",
                         name_from = "protein",
                         "adj.P.Val",
                         type = "y")


}
